{"version":3,"sources":["SearchBar.js","CRUD.js","App.js","index.js"],"names":["SearchBar","selectedField","fields","onSearch","useState","select","setSelect","text","setText","className","type","value","onChange","e","target","map","f","onClick","CRUD","category","list","onAdd","onEdit","onDelete","pageable","data","setData","isEdit","setIsEdit","totalPages","setTotalPages","page","setPage","useEffect","id","handleInputChange","event","name","console","log","handleClear","Array","from","document","querySelectorAll","forEach","input","style","marginBottom","slice","field","index","textTransform","class","grade","keys","number","RegExp","ViewTable","Pagination","disabled","color","i","scope","length","object","handleEditClick","marginRight","window","confirm","colSpan","API_PATH","App","setList","search","setSearch","Axios","get","params","then","res","count","catch","error","margin","post","put","o","delete","filter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b24dc185.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction SearchBar({ selectedField, fields, onSearch }) {\n    const [select, setSelect] = useState(selectedField);\n    const [text, setText] = useState('');\n    return (\n        <div className=\"input-group\">\n            <input type=\"text\" className=\"form-control\" value={text} onChange={e=>setText(e.target.value)} />\n            <div className=\"input-group-prepend\">\n            <select className=\"form-control\" value=\"Radish\" onChange={(e)=>setSelect(e.target.value)}>\n                {fields.map(f =><option value={f}>{f}</option>)}\n            </select>\n            </div>\n            <div className=\"input-group-prepend\">\n            <button className=\"form-control\" onClick={()=> onSearch(text, select)}>Search</button>\n            </div>\n            \n        </div>\n    )\n}\nexport default SearchBar;","import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from './SearchBar'\r\nimport Axios from \"axios\";\r\n\r\nconst CRUD = ({ category, list, onAdd, onEdit, onDelete, pageable, onSearch }) => {\r\n    const [data, setData] = useState({});\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        setIsEdit(data.id != null);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        setTotalPages(pageable.totalPages)\r\n        setPage(pageable.page)\r\n    }, [pageable])\r\n\r\n    const handleSaveClick = () => {\r\n        var emailRe = new RegExp(\"@\");\r\n        var phoneRe = /^\\d{10,20}$/\r\n        var addRe = /^\\w{10,20}$/\r\n        var nameRe =  /^\\w+( \\w+)*$/\r\n        var errorMess = ''\r\n        console.log()\r\n        // if (data.email ==null || !emailRe.test(data.email)) {\r\n        //     errorMess += 'Invalid email \\n';\r\n        // }\r\n        //\r\n        // if (data.phone ==null || !phoneRe.test(data.phone)) {\r\n        //     errorMess += 'Invalid phone \\n';\r\n        // }\r\n\r\n        // if (data.address ==null || !addRe.test(data.address)) {\r\n        //     errorMess += 'Invalid address \\n';\r\n        // }\r\n        //\r\n        // if (data.fullname ==null || !nameRe.test(data.fullname)) {\r\n        //     errorMess += 'Invalid fullname \\n';\r\n        // }\r\n        // if (data.parent ==null || !nameRe.test(data.parent)) {\r\n        //     errorMess += 'Invalid parent name \\n';\r\n        // }\r\n\r\n        if (errorMess !== '') {\r\n            window.alert(errorMess)\r\n            return;\r\n        }\r\n\r\n        handleClear();\r\n        if (data.grade == null) data.grade = 1;\r\n        isEdit ? onEdit(data) : onAdd(data)\r\n    }\r\n\r\n    const handleEditClick = (object) => {\r\n        setData(object);\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        if (window.confirm('Are you sure you wish to delete this item?')) {\r\n            onDelete(id);\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setData({ ...data, [name]: value });\r\n        console.log(value)\r\n    };\r\n\r\n    const handleClear = () => {\r\n        Array.from(document.querySelectorAll(\"input\")).forEach(\r\n            (input) => (input.value = \"\")\r\n        );\r\n        setData({})\r\n    };\r\n\r\n    return (\r\n        <div className=\"row \">\r\n            {/* First column: Add or Edit form */}\r\n            <div className=\"col-4\">\r\n                <h2 style={{ marginBottom: '25px' }}>\r\n                    {isEdit ? \"Edit\" : \"Add\"} {category.name.slice(0, -1)}\r\n                </h2>\r\n                {/* Input Form */}\r\n                <div>\r\n                    {category.fields.map((field, index) => (\r\n                        <div className=\"form-group\" key={index}>\r\n                            <label style={{ textTransform: \"capitalize\" }}>{field}</label>\r\n                            {field === \"grade\" ? <select class=\"form-control\" name={field} value={data.grade} onChange={handleInputChange} >\r\n                                    {[...Array(13).keys()].slice(1).map(number => <option value={number}>{number}</option>)}\r\n                                </select>\r\n                                : <input type=\"text\" className=\"form-control\" name={field} value={data[`${field}`]} onChange={handleInputChange} />}\r\n                        </div>\r\n                    ))}\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => handleSaveClick()}> Save </button>\r\n                    {isEdit &&\r\n                    <button type=\"button\" className=\"btn\" onClick={() => handleClear()}> Cancel </button>}\r\n                </div>\r\n            </div>\r\n            {/* Second column: View table */}\r\n            <div className=\"col-8 \">\r\n                <h2>View {category.name}</h2>\r\n                <SearchBar fields={category.fields} onSearch={onSearch} selectedField=\"fullname\"/>\r\n                <ViewTable />\r\n                <Pagination />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function Pagination() {\r\n        return (\r\n            <nav >\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className=\"page-item\">\r\n                        <button type=\"button\" className=\"page-link\" disabled={page === 1} style={page === 1 ? { color: 'lightgray' } : null} onClick={() => pageable.setPage(page => page - 1)}>\r\n                            <span>&laquo;</span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                        </button>\r\n                    </li>\r\n                    {[...Array(totalPages + 1).keys()].slice(1).map((number, i) =>\r\n                        <li className={`page-item ${page === number && \"active\"}`} key={i}>\r\n                            <button className=\"page-link\" onClick={() => pageable.setPage(number)}>{number}</button>\r\n                        </li>\r\n                    )}\r\n                    <li className=\"page-item\">\r\n                        <button type=\"button\" className=\"page-link\" disabled={page === totalPages} style={page === totalPages ? { color: 'lightgray' } : null} onClick={() => pageable.setPage(page => page + 1)}>\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    function SortButton() {\r\n        return (<button className=\"btn btn-sm\" type=\"button\"><span>&uarr;</span></button>)\r\n    }\r\n\r\n    function ViewTable() {\r\n        // console.log(list[0])\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    {category.fields.map((field, index) => <th scope=\"col\" key={index}>{field}</th>)}\r\n                    <th scope=\"col\">Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {list.length > 0 ?\r\n                    list.map((object) => (\r\n                        <tr key={object.id}>\r\n                            <td>{object.id}</td>\r\n                            {category.fields.map((field, index) => <td key={index}>{object[`${field}`]}</td>)}\r\n                            <td>\r\n                                <button className=\"btn btn-outline-primary btn-sm\" onClick={() => handleEditClick(object)} style={{ marginRight: '5px' }}>Edit</button>\r\n                                <button className=\"btn btn-outline-danger btn-sm\" onClick={() => handleDeleteClick(object.id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    )) :\r\n                    <tr><td colSpan={category.fields.length + 2}>No data</td></tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CRUD;\r\n","// import \"./index.css\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport CRUD from \"./CRUD\";\nimport Axios from \"axios\";\n\n// const CATEGORIES = [, { name: 'teachers', fields: ['name', 'expertise', 'phone', 'address'] }, { name: 'courses' }, { name: 'products' }];\n// const API_PATH = \"http://ec2-54-255-149-72.ap-southeast-1.compute.amazonaws.com/\"\nconst API_PATH = \"http://testmock-env.eba-uudbjrrb.ap-southeast-1.elasticbeanstalk.com/\"\nfunction App() {\n    const category = {\n        name: 'cinemas',\n        fields: ['name',  'company', 'address']\n        // fields: ['name',  'company', 'address', 'phone', 'email']\n    };\n    //const [category, setCategory] = useState(CATEGORIES[0]);\n    const [list, setList] = useState([]);\n    const [totalPages, setTotalPages] = useState(0);\n    const [page, setPage] = useState(1)\n    const [search, setSearch] = useState(false);\n\n    useEffect(() => {\n        if (search) return;\n        Axios.get(API_PATH + category.name, {params: {page: page}})\n            .then(res=>{\n                console.log(res.data);\n                setList(res.data)\n                let count = res.data.length;\n                setTotalPages(count === 0? 1 : count)\n            })\n            .catch(error => console.log(\"Getting list error\" + error))\n    }, [page])\n\n    function onSearch(text, select) {\n        setSearch(true);\n        Axios.get(API_PATH + category.name + \"/\" + select, {params: {page: 1, name: text}})\n            .then(res => {\n                console.log(res)\n                setList(res.data.list)\n                let count = res.data.totalPages;\n                setTotalPages(count === 0? 1 : count)\n                setSearch(false)\n            })\n        setPage(1);\n\n    }\n\n    const onAdd = (data) => {\n        Axios.post(API_PATH + category.name, data)\n            .then(res => {\n                console.log(res.data);\n                setList(list => [...list, {...data, id: res.data.id}])\n            })\n            .catch((error) => console.log(\"Adding error\" + error))\n    };\n\n    const onEdit = (data) => {\n        Axios.put(API_PATH + category.name, data)\n            .then(res => {\n                console.log(res);\n                setList(list => list.map((o) => (o.id === data.id ? data : o)))\n            })\n            .catch((error) => console.log(\"Editting error\" + error))\n    };\n\n    const onDelete = (id) => {\n        Axios.delete(API_PATH + category.name + '/' + id)\n            .then(res => {\n                console.log(res);\n                setList((list) => list.filter((o) => o.id !== id));\n            })\n    };\n\n    return (\n        <div className=\"container-fuild\">\n            {/* <NavBar /> */}\n            <div style={{ margin: '30px' }}>\n                <CRUD\n                    category={category}\n                    list={list}\n                    onAdd={onAdd}\n                    onEdit={onEdit}\n                    onDelete={onDelete}\n                    pageable={{totalPages: totalPages, page: page, setPage: setPage}}\n                    onSearch={onSearch}\n                />\n            </div>\n        </div>\n    );\n\n}\n\n\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>,\ndocument.getElementById('root'))"],"sourceRoot":""}